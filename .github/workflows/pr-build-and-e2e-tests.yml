name: Run tests against PR
on:
    workflow_dispatch:
    pull_request:
        paths-ignore:
            - '**/changelog/**'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions: {}

env:
    PR_NUMBER: ${{ github.event.pull_request.number }}
    PR_TITLE: ${{ github.event.pull_request.title }}

jobs:
    api:
        name: Runs API tests.
        if: github.event.pull_request.user.login != 'github-actions[bot]'
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-report
        outputs:
            stats: ${{ steps.stats.outputs.stats }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  build-filters: woocommerce

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: api

            - name: Run API tests
              id: api-action
              uses: ./.github/actions/tests/run-api-tests
              with:
                  report-title: API Test report for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: hello # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: api

            - name: Output test stats
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              id: stats
              uses: actions/github-script@v6
              env:
                  SCRIPT_PATH: ./.github/actions/tests/reports/publish-report-pr/scripts/output-stats.js
              with:
                  script: |
                      const script = require( process.env.SCRIPT_PATH );
                      script( { core } );

    e2e:
        name: Runs E2E tests.
        needs: [api]
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
        outputs:
            stats: ${{ steps.stats.outputs.stats }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: e2e

            - name: Run E2E tests
              id: e2e-action
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              env:
                  E2E_MAX_FAILURES: 15
              with:
                  report-title: E2E Test report for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: basic.spec.js # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: e2e

            - name: Output test stats
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              id: stats
              uses: actions/github-script@v6
              env:
                  SCRIPT_PATH: ./.github/actions/tests/reports/publish-report-pr/scripts/output-stats.js
              with:
                  script: |
                      const script = require( process.env.SCRIPT_PATH );
                      script( { core } );

    k6:
        name: Runs k6 Performance tests
        needs: [api]
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: k6

            - name: Run k6 performance tests
              id: run-k6-composite-action
              uses: './.github/actions/tests/run-k6-tests'

    api-hpos:
        name: Runs API tests (HPOS enabled)
        if: github.event.pull_request.user.login != 'github-actions[bot]'
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/api-test-report/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/api-test-report/allure-results
            ENABLE_HPOS: 1
        outputs:
            stats: ${{ steps.stats.outputs.stats }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  build-filters: woocommerce

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: api

            - name: Run API tests
              id: api-action
              uses: ./.github/actions/tests/run-api-tests
              with:
                  artifact-name: API Test report (HPOS enabled)
                  report-title: API Test report (HPOS enabled) for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: hello # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  feat-slug: hpos
                  test-type: api

            - name: Output test stats
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              id: stats
              uses: actions/github-script@v6
              env:
                  SCRIPT_PATH: ./.github/actions/tests/reports/publish-report-pr/scripts/output-stats.js
              with:
                  script: |
                      const script = require( process.env.SCRIPT_PATH );
                      script( { core } );

    e2e-hpos:
        name: Runs E2E tests (HPOS enabled)
        needs: [api-hpos]
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        outputs:
            stats: ${{ steps.stats.outputs.stats }}        
        env:
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            ENABLE_HPOS: 1
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  build-filters: woocommerce

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: e2e

            - name: Run E2E tests
              id: e2e-action
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              env:
                  E2E_MAX_FAILURES: 15
              with:
                  artifact-name: E2E Test report (HPOS enabled)
                  report-title: E2E Test report (HPOS enabled) for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: basic.spec.js # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  feat-slug: hpos
                  test-type: e2e

            - name: Output test stats
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              id: stats
              uses: actions/github-script@v6
              env:
                  SCRIPT_PATH: ./.github/actions/tests/reports/publish-report-pr/scripts/output-stats.js
              with:
                  script: |
                      const script = require( process.env.SCRIPT_PATH );
                      script( { core } );

    # mytodo add links to HPOS tests
    pr-comment:
        name: Post test results
        runs-on: ubuntu-20.04
        needs: [api, e2e, api-hpos, e2e-hpos]
        if: |
            ! github.event.pull_request.head.repo.fork &&
            github.event.pull_request.user.login != 'github-actions[bot]' &&
            success() || 
            ( 
              failure() && contains( needs.*.result, 'failure' )
            )
        permissions:
            contents: read
            issues: write
            pull-requests: write
        steps:
            - uses: actions/checkout@v3

            - name: Prepare test summary
              id: prepare-test-summary
              uses: actions/github-script@v6
              env:
                  SCRIPT_PATH: ./.github/workflows/scripts/prepare-test-summary.js
                  API_STATS: ${{ needs.api.outputs.stats }}
                  E2E_STATS: ${{ needs.e2e.outputs.stats }}
                  API_HPOS_STATS: ${{ needs.api-hpos.outputs.stats }}
                  E2E_HPOS_STATS: ${{ needs.e2e-hpos.outputs.stats }}
              with:
                  result-encoding: string
                  script: |
                      const script = require( process.env.SCRIPT_PATH );
                      return await script( { context, core } )

            # - name: Find PR comment by github-actions[bot]
            #   uses: peter-evans/find-comment@034abe94d3191f9c89d870519735beae326f2bdb
            #   id: find-comment
            #   with:
            #       issue-number: ${{ github.event.pull_request.number }}
            #       comment-author: 'github-actions[bot]'
            #       body-includes: Test Results Summary

            # - name: Create or update PR comment
            #   uses: peter-evans/create-or-update-comment@67dcc547d311b736a8e6c5c236542148a47adc3d
            #   with:
            #       comment-id: ${{ steps.find-comment.outputs.comment-id }}
            #       issue-number: ${{ github.event.pull_request.number }}
            #       body: ${{ steps.prepare-test-summary.outputs.result }}
            #       edit-mode: replace
