name: Run tests against PR
on:
    workflow_dispatch:
    pull_request:
        paths-ignore:
            - '**/changelog/**'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions: {}

env:
    PR_NUMBER: ${{ github.event.pull_request.number }}
    PR_TITLE: ${{ github.event.pull_request.title }}

jobs:
    api:
        name: Runs API tests.
        if: github.event.pull_request.user.login != 'github-actions[bot]'
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-report
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  build-filters: woocommerce

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: api

            - name: Run API tests
              id: api-action
              uses: ./.github/actions/tests/run-api-tests
              with:
                  report-title: API Test report for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: hello # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: api

    e2e:
        name: Runs E2E tests.
        needs: [api]
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
        outputs:
            TOTAL: ${{ steps.e2e-action.outputs.total }}
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: e2e

            - name: Run E2E tests
              id: e2e-action
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              env:
                  E2E_MAX_FAILURES: 15
              with:
                  report-title: E2E Test report for "${{ env.PR_TITLE }} (#${{ env.PR_NUMBER }})"
                  tests: basic.spec.js # mytodo remove

            - name: Publish report
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-pr
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: e2e

    k6-tests-run:
        name: Runs k6 Performance tests
        needs: [api]
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: k6

            - name: Run k6 performance tests
              id: run-k6-composite-action
              uses: './.github/actions/tests/run-k6-tests'
# mytodo add links to HPOS tests
# test-summary:
#     name: Post test results
#     if: |
#         always() &&
#         ! github.event.pull_request.head.repo.fork &&
#         github.event.pull_request.user.login != 'github-actions[bot]' &&
#         (
#           contains( needs.*.result, 'success' ) ||
#           contains( needs.*.result, 'failure' )
#         )
#     runs-on: ubuntu-20.04
#     needs: [api, e2e]
#     permissions:
#         contents: read
#         issues: write
#         pull-requests: write
#     env:
#         E2E_GRAND_TOTAL: ${{needs.e2e.outputs.E2E_GRAND_TOTAL}}
#     steps:
#         - name: Create dirs
#           run: |
#               mkdir -p repo
#               mkdir -p artifacts/api
#               mkdir -p artifacts/e2e
#               mkdir -p output

#         - name: Checkout code
#           uses: actions/checkout@v3
#           with:
#               path: repo

#         - name: Download API test report artifact
#           uses: actions/download-artifact@v3
#           with:
#               name: api-test-report---pr-${{ github.event.number }}
#               path: artifacts/api

#         - name: Download Playwright E2E test report artifact
#           uses: actions/download-artifact@v3
#           with:
#               name: e2e-test-report---pr-${{ github.event.number }}
#               path: artifacts/e2e

#         - name: Prepare test summary
#           id: prepare-test-summary
#           uses: actions/github-script@v6
#           env:
#               API_SUMMARY_PATH: ${{ github.workspace }}/artifacts/api/allure-report/widgets/summary.json
#               E2E_PW_SUMMARY_PATH: ${{ github.workspace }}/artifacts/e2e/allure-report/widgets/summary.json
#               PR_NUMBER: ${{ github.event.number }}
#               SHA: ${{ github.event.pull_request.head.sha }}
#           with:
#               result-encoding: string
#               script: |
#                   const script = require( './repo/.github/workflows/scripts/prepare-test-summary.js' )
#                   return await script( { core } )

#         - name: Find PR comment by github-actions[bot]
#           uses: peter-evans/find-comment@034abe94d3191f9c89d870519735beae326f2bdb
#           id: find-comment
#           with:
#               issue-number: ${{ github.event.pull_request.number }}
#               comment-author: 'github-actions[bot]'
#               body-includes: Test Results Summary

#         - name: Create or update PR comment
#           uses: peter-evans/create-or-update-comment@67dcc547d311b736a8e6c5c236542148a47adc3d
#           with:
#               comment-id: ${{ steps.find-comment.outputs.comment-id }}
#               issue-number: ${{ github.event.pull_request.number }}
#               body: ${{ steps.prepare-test-summary.outputs.result }}
#               edit-mode: replace

# publish-test-reports:
#     name: Publish test reports
#     if: |
#         always() &&
#         ! github.event.pull_request.head.repo.fork &&
#         github.event.pull_request.user.login != 'github-actions[bot]' &&
#         (
#           contains( needs.*.result, 'success' ) ||
#           contains( needs.*.result, 'failure' )
#         )
#     runs-on: ubuntu-20.04
#     needs: [api, e2e, k6-tests-run]
#     env:
#         GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
#         PR_NUMBER: ${{ github.event.number }}
#         RUN_ID: ${{ github.run_id }}
#         COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
#     steps:
#         - name: Publish test reports
#           env:
#               API_ARTIFACT: api-test-report---pr-${{ github.event.number }}
#               E2E_ARTIFACT: e2e-test-report---pr-${{ github.event.number }}
#           run: |
#               gh workflow run publish-test-reports-pr.yml \
#                 -f run_id=$RUN_ID \
#                 -f api_artifact=$API_ARTIFACT \
#                 -f e2e_artifact=$E2E_ARTIFACT \
#                 -f pr_number=$PR_NUMBER \
#                 -f commit_sha=$COMMIT_SHA \
#                 -f s3_root=public \
#                 --repo woocommerce/woocommerce-test-reports
