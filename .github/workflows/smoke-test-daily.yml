name: Smoke test daily
on:
    schedule:
        - cron: '25 3 * * *'
    workflow_dispatch:

env:
    API_ARTIFACT: API tests against nightly smoke test site
    E2E_ARTIFACT: E2E tests against nightly smoke test site
    FORCE_COLOR: 1

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions: {}

jobs:
    api:
        name: API tests on nightly build
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        outputs:
            stats: ${{ steps.report.outputs.stats }}
            report-url: ${{ steps.report.outputs.report-url }}
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/api-core-tests/test-results/allure-report
            BASE_URL: ${{ secrets.SMOKE_TEST_URL }}
            ADMIN_USER: ${{ secrets.SMOKE_TEST_ADMIN_USER }}
            ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_ADMIN_PASSWORD }}
            ADMIN_USER_EMAIL: ${{ secrets.SMOKE_TEST_ADMIN_USER_EMAIL }}
            CUSTOMER_USER: ${{ secrets.SMOKE_TEST_CUSTOMER_USER }}
            CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_CUSTOMER_PASSWORD }}
            DEFAULT_TIMEOUT_OVERRIDE: 120000
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Update to WooCommerce nightly
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              with:
                  artifact-name: ${{ env.E2E_ARTIFACT }}
                  tests: update-woocommerce.spec.js
                  report-title: E2E Update to WooCommerce nightly
              env:
                  RESET_SITE: true
                  UPDATE_WC: nightly

            - name: Run API tests
              id: api-action
              uses: ./.github/actions/tests/run-api-tests
              with:
                  artifact-name: ${{ env.API_ARTIFACT }}
                  tests: hello # mytodo remove

            - name: Upload report to bucket
              id: report
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-daily
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: api

    e2e:
        name: E2E tests on nightly build
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        needs: [api]
        outputs:
            stats: ${{ steps.report.outputs.stats }}
            report-url: ${{ steps.report.outputs.report-url }}
        env:
            ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_ADMIN_PASSWORD }}
            ADMIN_USER: ${{ secrets.SMOKE_TEST_ADMIN_USER }}
            ADMIN_USER_EMAIL: ${{ secrets.SMOKE_TEST_ADMIN_USER_EMAIL }}
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            BASE_URL: ${{ secrets.SMOKE_TEST_URL }}
            CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_CUSTOMER_PASSWORD }}
            CUSTOMER_USER: ${{ secrets.SMOKE_TEST_CUSTOMER_USER }}
            DEFAULT_TIMEOUT_OVERRIDE: 120000
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Run E2E tests
              id: e2e-action
              uses: ./.github/actions/tests/run-e2e-tests
              with:
                  artifact-name: ${{ env.E2E_ARTIFACT }}
                  tests: basic.spec.js # mytodo remove

            - name: Upload report to bucket
              id: report
              if: success() || ( failure() && steps.e2e-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-daily
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: e2e

    k6:
        name: k6 tests on nightly build
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        needs: [api]
        if: success() || failure()
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Update performance test site with E2E test
              continue-on-error: true
              id: update-wc
              uses: ./.github/actions/tests/run-e2e-tests
              with:
                  artifact-name: k6 Update to WooCommerce nightly
                  tests: update-woocommerce.spec.js
                  report-title: k6 Update to WooCommerce nightly
              env:
                  BASE_URL: ${{ secrets.SMOKE_TEST_PERF_URL }}/
                  ADMIN_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  CUSTOMER_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  UPDATE_WC: nightly
                  DEFAULT_TIMEOUT_OVERRIDE: 120000

            - name: Run k6 performance tests
              id: k6-action
              uses: './.github/actions/tests/run-k6-tests'
              env:
                  URL: ${{ secrets.SMOKE_TEST_PERF_URL }}
                  HOST: ${{ secrets.SMOKE_TEST_PERF_HOST }}
                  A_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  A_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  C_USER: ${{ secrets.SMOKE_TEST_PERF_ADMIN_USER }}
                  C_PW: ${{ secrets.SMOKE_TEST_PERF_ADMIN_PASSWORD }}
                  P_ID: 22733

    plugins:
        name: E2E tests with ${{ matrix.plugin }}
        runs-on: ubuntu-20.04
        permissions:
            contents: read
        needs: [api]
        env:
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-results
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/allure-report
            ARTIFACT_NAME: E2E with ${{ matrix.plugin }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - plugin: 'WooCommerce Payments'
                      repo: 'automattic/woocommerce-payments'
                      slug: 'woocommerce-payments'
                    - plugin: 'WooCommerce PayPal Payments'
                      repo: 'woocommerce/woocommerce-paypal-payments'
                      slug: 'woocommerce-paypal-payments'
                    - plugin: 'WooCommerce Shipping & Tax'
                      repo: 'automattic/woocommerce-services'
                      slug: 'woocommerce-services'
                    - plugin: 'WooCommerce Subscriptions'
                      repo: WC_SUBSCRIPTIONS_REPO
                      private: true
                      slug: 'woocommerce-subscriptions'
                    - plugin: 'Gutenberg'
                      repo: 'WordPress/gutenberg'
                      slug: 'gutenberg'
                    - plugin: 'Gutenberg - Nightly'
                      repo: 'bph/gutenberg'
                      slug: 'gutenberg-nightly'
        steps:
            - uses: actions/checkout@v3

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  build-filters: woocommerce

            - name: Setup local test environment
              uses: ./.github/actions/tests/setup-local-test-environment
              with:
                  test-type: e2e

            - name: Run 'Upload plugin' test
              id: upload-plugin
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              env:
                  E2E_MAX_FAILURES: 15
                  PLUGIN_REPOSITORY: ${{ matrix.private && secrets[matrix.repo] || matrix.repo }}
                  PLUGIN_NAME: ${{ matrix.plugin }}
                  GITHUB_TOKEN: ${{ secrets.E2E_GH_TOKEN }}
              with:
                  report-title: ${{ env.ARTIFACT_NAME }}
                  artifact-name: ${{ env.ARTIFACT_NAME }}
                  tests: upload-plugin.spec.js # mytodo remove

            - name: Run rest of E2E tests
              id: e2e-action
              timeout-minutes: 60
              uses: ./.github/actions/tests/run-e2e-tests
              env:
                  E2E_MAX_FAILURES: 15
              with:
                  report-title: ${{ env.ARTIFACT_NAME }}
                  artifact-name: ${{ env.ARTIFACT_NAME }}
                  tests: basic.spec.js # mytodo remove

            - name: Upload report to bucket
              id: report
              if: success() || ( failure() && steps.api-action.result == 'failure' )
              uses: ./.github/actions/tests/reports/publish-report-daily
              with:
                  key-id: ${{ secrets.REPORTS_AWS_ACCESS_KEY_ID }}
                  region: ${{ secrets.REPORTS_AWS_REGION }}
                  access-key: ${{ secrets.REPORTS_AWS_SECRET_ACCESS_KEY }}
                  reports-home: ${{ secrets.REPORTS_BUCKET }}
                  test-type: e2e
                  plugin-name: ${{ matrix.plugin }}
                  plugin-slug: ${{ matrix.slug }}

    # mytodo job: e2e-hpos
    # e2e-hpos:
