name: Run API tests
description: Run WooCommerce Core API tests, generate Allure report and upload it as artifact.
permissions: {}

inputs:
    artifact-name:
        default: API test report
        description: Artifact with allure-results, allure-report folders.
    tests:
        description: |
            Specific tests to run, separated by single whitespace.
            See https://playwright.dev/docs/test-cli.
    report-title:
        default: API test report
        description: Title to appear on Allure Overview page.
outputs:
    result:
        description: Whether the test passed or failed.
        value: ${{ steps.run-api-tests.conclusion }}
    allure-report-dir:
        description: Path to allure-report dir.
        value: ${{ steps.allure-report-dir.outputs.allure-report-dir }}

runs:
    using: composite
    steps:
        - name: Run API tests.
          id: run-api-tests
          working-directory: plugins/woocommerce
          shell: bash
          run: pnpm test:api-pw ${{ inputs.tests }}

        - name: Generate Test report.
          if: success() || ( failure() && steps.run-api-tests.conclusion == 'failure' )
          working-directory: plugins/woocommerce
          shell: bash
          run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

        # mytodo copy to e2e
        - name: Update report title
          uses: actions/github-script@v6
          env:
              SCRIPT_PATH: ./.github/actions/tests/reports/scripts/set-report-title.js
              REPORT_TITLE: ${{ inputs.report-title }}
          with:
              script: |
                  const script = require( process.env.SCRIPT_PATH );
                  script(
                    process.env.ALLURE_REPORT_DIR,
                    process.env.REPORT_TITLE
                  );

        - name: Archive test report
          if: success() || ( failure() && steps.run-api-tests.conclusion == 'failure' )
          uses: actions/upload-artifact@v3
          with:
              name: ${{ inputs.artifact-name }}
              path: |
                  ${{ env.ALLURE_RESULTS_DIR }}
                  ${{ env.ALLURE_REPORT_DIR }}
              retention-days: 20

        - name: Output 'allure-report' path # mytodo copy to e2e
          id: allure-report-dir
          shell: bash
          run: |
              echo "allure-report-dir=\"${{ env.ALLURE_REPORT_DIR }}\"" >> "$GITHUB_OUTPUT"
